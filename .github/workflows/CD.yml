name: CD Pipeline

on:
  push:
    branches: [ be/dev ]

env:
  SAFE_REF: ${{ replace(github.ref_name, '/', '-') }}
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/${{ env.SAFE_REF }}

defaults:
  run:
    working-directory: ./backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: testpw
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/testdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: testpw
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 21

      - name: Grant execute to Gradle
        run: chmod +x ./gradlew

      - name: Build & Test
        run: ./gradlew build

      - name: Docker Hub Login
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" \
          | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Calc short sha
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> "$GITHUB_ENV"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.SHORT_SHA }}
            ${{ env.IMAGE_NAME }}:latest

  deploy:
    runs-on: self-hosted
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file for Docker Compose
        run: printf '%s\n' "${{ secrets.ENV_DOCKER }}" > .env.docker

      - name: Deploy with Docker Compose
        run: |
          docker compose -f docker-compose.yml -f docker-compose.dev.yml pull app
          docker compose -f docker-compose.yml -f docker-compose.dev.yml up -d          

      - name: Debug running containers
        run: docker ps -a
