name: CD Pipeline

on:
  push:
    branches: [ be/dev ]

defaults:
  run:
    working-directory: ./backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    outputs:
      image_name: ${{ steps.set_image_name.outputs.image_name }}
      short_sha: ${{ steps.set_short_sha.outputs.short_sha }}

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: testpw
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      SPRING_DATASOURCE_URL: jdbc:mysql://127.0.0.1:3306/testdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: testpw
      DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Prepare IMAGE_NAME
        id: set_image_name
        shell: bash
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          SAFE_REF="$(echo "${BRANCH}" | tr '[:upper:]' '[:lower:]' | tr '/' '-')"
          echo "image_name=${DOCKER_USERNAME}/${SAFE_REF}" >> "$GITHUB_OUTPUT"
    
      - name: Calc short sha
        id: set_short_sha
        run: echo "short_sha=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: corretto
          java-version: 21

      - name: Grant execute to Gradle
        run: chmod +x ./gradlew

      - name: Build & Test
        run: ./gradlew build

      - name: Docker Hub Login
        run: echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" \
          | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ steps.set_image_name.outputs.image_name }}:${{ steps.set_short_sha.outputs.short_sha }}
            ${{ steps.set_image_name.outputs.image_name }}:latest

  deploy:
    runs-on: self-hosted
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file for Docker Compose
        run: |
          printf '%s\n' "${{ secrets.ENV_DOCKER }}" > .env.docker
          echo "IMAGE_NAME=${{ needs.build-and-push.outputs.image_name }}" >> .env.docker
      
      - name: Deploy with Docker Compose
        run: |
          docker compose -f docker-compose.yml -f docker-compose.dev.yml pull app
          docker compose -f docker-compose.yml -f docker-compose.dev.yml up -d          

      - name: Debug running containers
        run: docker ps -a
