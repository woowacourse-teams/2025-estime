dependencies {
    // JPA annotations for entities (compile-only, implementation provided by infrastructure)
    compileOnly 'jakarta.persistence:jakarta.persistence-api'
    compileOnly 'org.hibernate.orm:hibernate-core'
    testRuntimeOnly 'org.hibernate.orm:hibernate-core'

    // QueryDSL for Q-classes generation
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    // TSID for domain value objects (RoomSession)
    implementation "com.github.f4b6a3:tsid-creator:${tsidVersion}"

    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

def generatedDir = layout.buildDirectory.dir('generated/querydsl')

sourceSets {
    main.java.srcDirs += files(generatedDir)
}

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(generatedDir)
}

clean.doLast {
    delete generatedDir
}

